openapi: 3.0.0
info:
  description: |
    This is a prediction server for predicting students on whether they are qualified candidates for CMU graduate schools.
  version: "1.0.0"
  title: CMU Student Prediction
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: Local host environment
    url: http://localhost/
tags:
  - name: predict
    description: Predicts graduate students for whether they're qualified to be admitted into CMU based on several attributes.
paths:
  '/predict':
    get:
      tags:
        - predict
      summary: Finds qualified students based on predictions.
      description: >-
        Returns a boolean indicated whether a student is qualified.
      parameters:
        - name: sex
          in: query
          description: Student's sex (binary:"F" - female or "M" - male)
          required: true
          explode: true
          schema:
            type: string
            enum:
              - female
              - male
        - name: age
          in: query
          description: Student's age (numeric:from 15 to 22)
          required: true
          explode: true
          schema:
            type: integer
            minimum: 15
            maximum: 22
        - name: address
          in: query
          description: Student's home address (binary:"U" - urban or "R" - rural)
          required: true
          explode: true
          schema:
            type: string
            enum:
              - urban
              - rural
        - name: famsize
          in: query
          description: Family size (binary:"LE3" - less or equal to 3 or "GT3" - greater than 3)
          required: true
          explode: true
          schema:
            type: string
            enum:
              - less or equal to 3
              - greater than 3
        - name: Pstatus
          in: query
          description: Parent's cohabitation status (binary:"T" - living together or "A" - apart)
          required: true
          explode: true
          schema:
            type: string
            enum:
              - living together
              - apart
        - name: Medu
          in: query
          description: Mother's education (numeric:0 - none,  1 - primary education (4th grade), 2 – 5th to 9th grade, 3 – secondary education or 4 – higher education)
          required: true
          explode: true
          schema:
            type: integer
            enum:
              - none
              - primary education (4th grade)
              - 5th to 9th grade
              - secondary education
              - higher education
        - name: Fedu
          in: query
          description: Father's education (numeric:0 - none,  1 - primary education (4th grade), 2 – 5th to 9th grade, 3 – secondary education or 4 – higher education)
          required: true
          explode: true
          schema:
            type: integer
            enum:
              - none
              - primary education (4th grade)
              - 5th to 9th grade
              - secondary education
              - higher education
        - name: Mjob
          in: query
          description: Mother's job (nominal:"teacher", "health" care related, civil "services" (e.g. administrative or police), "at_home" or "other")
          required: true
          explode: true
          schema:
            type: string
            enum:
              - teacher
              - health care related
              - civil services (e.g. administrative or police)
              - at home
              - other
        - name: Fjob
          in: query
          description: Father's job (nominal:"teacher", "health" care related, civil "services" (e.g. administrative or police), "at_home" or "other")
          required: true
          explode: true
          schema:
            type: string
            enum:
              - teacher
              - health care related
              - civil services (e.g. administrative or police)
              - at home
              - other
        - name: reason
          in: query
          description: Reason to choose this school (nominal:close to "home", school "reputation", "course" preference or "other")
          required: true
          explode: true
          schema:
            type: string
            enum:
              - close to home
              - school reputation
              - course preference
              - other
        - name: guardian
          in: query
          description: Student's guardian (nominal:"mother", "father" or "other")
          required: true
          explode: true
          schema:
            type: string
            enum:
              - mother
              - father
              - other
        - name: traveltime
          in: query
          description: Home to school travel time (numeric:1 - <15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - >1 hour)
          required: true
          explode: true
          schema:
            type: integer
            enum:
              - <15 min.
              - 15 to 30 min.
              - 30min. to 1 hour
              - ">1 hour"
        - name: studytime
          in: query
          description: Weekly study time (numeric:1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours)
          required: true
          explode: true
          schema:
            type: integer
            enum:
              - <2 hours
              - 2 to 5 hours
              - 5 to 10 hours
              - ">10 hours"
        - name: failures
          in: query
          description: Number of past class failures (numeric:n if 1<=n<3, else 4)
          required: true
          explode: true
          schema:
            type: integer
            enum:
              - n
              - 4
        - name: schoolsup
          in: query
          description: Extra educational support (binary:true or false)
          required: true
          explode: true
          schema:
            type: boolean
        - name: famsup
          in: query
          description: Family educational support (binary:true or false)
          required: true
          explode: true
          schema:
            type: boolean
        - name: paid
          in: query
          description: Extra paid classes within the course subject (binary:true or false)
          required: true
          explode: true
          schema:
            type: boolean
        - name: activities
          in: query
          description: Extra-curricular activities (binary:true or false)
          required: true
          explode: true
          schema:
            type: boolean
        - name: nursery
          in: query
          description: Attended nursery school (binary:true or false)
          required: true
          explode: true
          schema:
            type: boolean
        - name: higher
          in: query
          description: Wants to take higher education (binary:true or false)
          required: true
          explode: true
          schema:
            type: boolean
        - name: internet
          in: query
          description: Internet access at home (binary:true or false)
          required: true
          explode: true
          schema:
            type: boolean
        - name: romantic
          in: query
          description: With a romantic relationship (binary:true or false)
          required: true
          explode: true
          schema:
            type: boolean
        - name: famrel
          in: query
          description: Quality of family relationships (numeric:from 1 - very bad to 5 - excellent)
          required: true
          explode: true
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: freetime
          in: query
          description: Free time after school (numeric:from 1 - very low to 5 - very high)
          required: true
          explode: true
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: goout
          in: query
          description: Going out with friends (numeric:from 1 - very low to 5 - very high)
          required: true
          explode: true
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: Dalc
          in: query
          description: Workday alcohol consumption (numeric:from 1 - very low to 5 - very high)
          required: true
          explode: true
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: Walc
          in: query
          description: Weekend alcohol consumption (numeric:from 1 - very low to 5 - very high)
          required: true
          explode: true
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: health
          in: query
          description: Current health status (numeric:from 1 - very bad to 5 - very good)
          required: true
          explode: true
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: absences
          in: query
          description: Number of school absences (numeric:from 0 to 93)
          required: true
          explode: true
          schema:
            type: integer
            minimum: 0
            maximum: 93
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuccessApiResponse'
        '400':
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
      deprecated: false
components:
  schemas:
    SuccessApiResponse:
      type: object
      properties:
        isQualified:
          type: boolean
    ErrorApiResponse:
      type: object
      properties:
        error:
          type: string
